generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Auction {
  id               String            @id @default(uuid())
  type             AuctionType       @default(REGULAR)
  title            String
  isActive         Boolean           @default(true)
  startsAt         DateTime?
  endsAt           DateTime?
  initialPrice     Int           @default(0)
  stepPrice        Int           @default(0)
  buyoutPrice      Int?
  description      String?
  createdAt        DateTime          @default(now())
  updatedAt        DateTime          @updatedAt

  companyId        String?
  chatroomId       Int

  positions        AuctionPosition[]
  participants     AuctionParticipants[]

  @@map("auctions")
}

model AuctionPosition {
  id            Int             @id @default(autoincrement())
  auctionId     String
  auction       Auction  @relation(fields: [auctionId], references: [id])

  name          String
  volume        Int
  volumeUnit    VolumeUnit
  price         Int
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt

  @@map("auction_positions")
}

model AuctionParticipants {
  id            Int             @id @default(autoincrement())
  auctionId     String
  auction       Auction  @relation(fields: [auctionId], references: [id])

  companyId     String
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt

  @@map("auction_participants")
}

enum AuctionType {
  REGULAR
  COLLECTIVE
}

enum VolumeUnit {
  KG
  TON
}